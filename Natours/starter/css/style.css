/* $color-background: rgba(50, 150, 200, 0.8); */
/* 
**
7.10: css: @keyframe & animation property
**
*/
@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translate(-100%);
    transform: rotate(-180deg); }
  70% {
    opacity: 0.5;
    transform: translate(1.5rem);
    transform: rotate(60deg); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translate(100%); }
  70% {
    opacity: 0.5;
    transform: translate(1rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

/* btm appear animation */
@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(100%); }
  30% {
    opacity: 0.2;
    transform: translateY(50%); }
  100% {
    opacity: 1;
    transform: translateY(0); } }

*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  /*border and padding is no longer added to the total width or height of the box*/
  box-sizing: inherit;
  /*****inheritance*****/
  /*  box-sizing was not inherited; now it is by forcing  */ }

html {
  /*    font-size: 10px;        */
  /*  now 10px=1rem (root font size)  */
  font-size: 62.5%;
  /*  default: 16px
        we want 10px(relatively), we use 10/16 here*/ }

body {
  box-sizing: border-box; }

/* 
* 8.11 scss: encapsulate
*/
.heading-primary {
  color: #fff;
  text-transform: uppercase;
  backface-visibility: hidden;
  /*  ????get rid of the ending animation  */ }
  .heading-primary--main {
    display: block;
    font-size: 6rem;
    letter-spacing: 1rem;
    font-family: '8BITWONDERNominal';
    font-weight: normal;
    font-style: normal;
    /*  animation  */
    animation-name: moveInLeft;
    animation-duration: 2s;
    /*  in fast  */ }
  .heading-primary--sub {
    display: block;
    font-size: 2rem;
    font-weight: 400;
    letter-spacing: .8rem;
    /*  animation  */
    animation-name: moveInRight;
    animation-duration: 2s; }

body {
  background-color: #8ee4af;
  font-family: "Lato", sans-serif;
  font-weight: 400;
  /*  how thick  */
  /*    font-size: 16px;*/
  line-height: 1.7;
  /*  height of each line  */
  color: #777;
  /*    padding: 30px;        */
  padding: 3rem;
  /*  margin VS padding??  */ }

.heading-secondary {
  font-size: 3.5rem;
  text-transform: uppercase;
  font-weight: 700;
  display: inline-block;
  background-image: linear-gradient(to right, #55c57a, #28b485);
  -webkit-background-clip: text;
  color: transparent;
  letter-spacing: .2rem;
  transition: all .2s; }
  .heading-secondary:hover {
    transform: skewY(2deg) skewx(15deg) scale(1.1);
    text-shadow: 0.5rem 1rem 2rem rgba(0, 0, 0, 0.2); }

.heading-tertiary {
  font-size: 1.6rem;
  font-weight: 700;
  text-transform: uppercase; }

.paragraph {
  font-size: 1.6rem; }
  .paragraph:not(:last-child) {
    margin-bottom: 3rem; }

.u-center-text {
  text-align: center; }

.u-margin-bottom-l {
  margin-bottom: 8rem; }

.u-margin-bottom-m {
  margin-bottom: 4rem; }

.u-margin-bottom-s {
  margin-bottom: 1.5rem; }

/* 
* 8.11 scss: encapsulate
*/
.btn {
  /* this is the initial state */
  /* link: a special state of a selector when it is ancher */
  /* visited: text become purple from blue */
  /* pseudo-element: after
    when we hover the btn, we want sth to happen after*/
  /* we want the pseudo-element grows and fade out*/
  /* initial state is the .btn::after peseudo-element */
  /* transform is related to the initial link state */
  /* transform is related to the initial link state */ }
  .btn:link, .btn:visited {
    font-size: 1.6rem;
    text-transform: uppercase;
    text-decoration: none;
    border-radius: 10rem;
    padding: 1.5rem 4rem;
    display: inline-block;
    transition: all .2s;
    /*  transition: duration of the animation; shorthand of animation
            has to be in the initial state  */
    position: relative;
    /*  relative to the after   */ }
  .btn--white {
    background-color: #fff;
    color: #777;
    border-radius: 8rem;
    margin-top: 4rem; }
    .btn--white::after {
      background-color: #fff; }
  .btn:hover {
    transform: translateY(-0.3rem);
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2); }
    .btn:hover::after {
      /*    transform: scale(1.5);*/
      transform: scaleX(1.4) scaleY(1.6);
      opacity: 0; }
  .btn:active {
    transform: translateY(-0.1rem);
    box-shadow: 0 0.5rem 0.5rem rgba(0, 0, 0, 0.2); }
  .btn::after {
    content: "";
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 8rem;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    /*  make it behind the btn  */
    transition: all .4s; }
  .btn--animated {
    animation: moveInBottom 0.8s ease-out 0.75s;
    /*                    duration        delay  */
    animation-fill-mode: backwards;
    /*  auto set the animation to 0%/initial state before the animation starts  */ }

.btn-text:link, .btn-text:visited {
  font-size: 1.6rem;
  color: #55c57a;
  display: inline-block;
  text-decoration: none;
  border-bottom: 1px solid #55c57a;
  padding: 3px; }

.btn-text:hover {
  background-color: #55c57a;
  color: #fff;
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
  transform: translate(-2px); }

.btn-text:active {
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2);
  transform: translate(0); }

.composition {
  position: relative; }
  .composition__photo {
    width: 55%;
    box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.4);
    border-radius: 2px;
    position: absolute;
    outline-offset: 2rem;
    z-index: 5;
    transition: all .2s; }
    .composition__photo--p1 {
      left: 0;
      top: -2rem; }
    .composition__photo--p2 {
      right: 0;
      top: 2rem; }
    .composition__photo--p3 {
      left: 20%;
      top: 10rem; }
    .composition__photo:hover {
      outline: 1.5rem solid #55c57a;
      transform: scale(1.05) translateY(-0.5rem);
      box-shadow: 0 2.5rem 4rem rgba(0, 0, 0, 0.5);
      z-index: 10; }
  .composition:hover .composition__photo:not(:hover) {
    transform: scale(95%); }

.feature-box {
  background-color: rgba(255, 255, 255, 0.8);
  font-size: 1.5rem;
  padding: 2.5rem;
  text-align: center;
  border-radius: 3px;
  box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15);
  transition: transform .3s; }
  .feature-box__icon {
    font-size: 6rem;
    margin-bottom: 1.5rem;
    background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8));
    /*        url(../img/hero.jpg);*/
    -webkit-background-clip: text;
    color: transparent; }
  .feature-box:hover {
    transform: translateY(-1.5rem) scale(1.05); }

.row {
  max-width: 114rem;
  margin: 0 auto; }
  .row:not(:last-child) {
    margin-bottom: 8rem; }
  .row::after {
    content: "";
    display: table;
    clear: both; }
  .row [class^="col"] {
    float: left; }
    .row [class^="col"]:not(:last-child) {
      margin-right: 6rem; }
  .row .col11 {
    width: calc((100% - 6rem)/2); }
  .row .col12 {
    width: calc((100% - 2*6rem)/3); }
  .row .col22 {
    width: calc(2*((100% - 2*6rem)/3) + 6rem); }
  .row .col13 {
    width: calc((100% - 2*6rem)/3); }
  .row .col14 {
    width: calc((100% - 3*6rem)/4); }
  .row .col15 {
    width: calc((100% - 2*6rem)/3); }

/* 
* 8.11 scss: encapsulate
*/
.header {
  height: 90vh;
  /*95% of the view height*/
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../img/bg.png);
  background-size: cover;
  /*  always fit the view window  */
  background-position: top;
  /*    top of the back img stay still  */
  clip-path: polygon(0 0, 100% 0, 100% 100%, 50% 75%, 0 100%);
  /*  URL: css clip path maker  */
  position: relative; }
  .header__logo-box {
    top: 4rem;
    left: 4rem; }
  .header__logo {
    height: 3.5rem; }
  .header__text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
    /*  shift to left and top by 50% of the element itself  */
    text-align: center;
    /*  set the text (and inline element) to be at center */ }
  .header__logo:hover {
    animation: moveInLeft 1s ease-out; }

.section-about {
  background-color: #efe356;
  padding: 20rem 0 10rem 0;
  margin-top: -25vh; }

.section-features {
  padding: 20rem 0;
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../img/bg2.png);
  background-size: cover;
  /*  always fit the view window  */
  background-position: top; }

/* 
**
*7.17: css level: importance > specificity > source order
*                 specificity: inline > ID > class > element
*      css value processing
*      css inheritance
*
*     !!change every px to rem!!
**    
*/
/**
*
7.28: SCSS

8.12: CSS seperately capsulation
*/
